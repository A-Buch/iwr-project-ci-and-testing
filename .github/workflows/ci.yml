name: Build and Testing

on:
  # We run CI on pushes to the develop branch
  push:
    branches:
    - develop
  # and on all pull requests to the main branch
  pull_request:
    branches:
    - develop
  # as well as upon manual triggers through the 'Actions' tab of the Github UI
  #workflow_dispatch:
    # periodical run
    # schedule:
        # - cron: "0 5 * * 1" # 5.00 am, every day, weekday So-Sa, Monday

#  ubuntu-latest 


jobs:
  build_and_test:
    name: Build and test  # each job needs a name - mandatory
    strategy:
      matrix:
        os: windows-2019 
        python-version: [3.7.3]
    runs-on: ${{ matrix.os }}
    name: Testing on ${{ matrix.os }}


    steps:
    - uses: actions/checkout@v3
    - name: Checkout repository
      #shell: python
      uses: actions/checkout@v3  ## PROBLM: Error: Unable to resolve action actions/setup-checkout, repository not found
#    org:  uses: actions/setup-checkout@v3  ## PROBLM: Error: Unable to resolve action actions/setup-checkout, repository not found
      with:
        # setuptools_scm requires a non-shallow clone of the repository
        fetch-depth: 0

    # use this only for windows run
    - name: greetings f powershell
      if: runner.os == 'Windows' # bei if its runner.os and in 'xx'
      shell: pwsh
      run: Write-Host "Hi"

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python package
      run: |
        python -m pip install .[tests]
        echo new line
        print("hello world")
    
    - name: Run Python tests
      run: |
        python -m pytest --nbval
        echo No test errors # functional github action


  coverage:
    name: Coverage Testing
    runs-on:  windows-2019 #ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python packages
      run: |
        python -m conda install -r requirements-dev.txt
        if ( -f ./config/environment.yml ); then conda install -r ./config/environment.yml; fi
        python -m pip install .[tests]
    # pip install -e .
    # pip install flake8  
    # flake8 = # for code formating

    # - name: Run Python tests 
      # working-directory: ./tests
      # run: |
        # python -m pytest --cov --cov-report=xml

    - name: Run Python tests [pytest]
      working-directory: ./tests
      run: |
        python -m pytest 


    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: true
        files: ./tests/coverage.xml
